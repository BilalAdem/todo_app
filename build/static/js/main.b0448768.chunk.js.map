{"version":3,"sources":["components/redux/TodoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","components/redux/Store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","TodoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","Date","now","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","fulfilled","console","log","pending","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","onClick","TodoList","useSelector","useEffect","map","TotalCompleteItems","length","App","store","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0448768.chunk.js","sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync () => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos');\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n)\r\nexport const addTodoAsync = createAsyncThunk(\r\n    'todos/addTodosAsync',\r\n    async (payload)=>{\r\n        const resp = await fetch('http://localhost:7000/todos',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n\t\t\tbody: JSON.stringify({ title: payload.title }),\r\n        });\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t} \r\n    }\r\n)\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n    'todos/toggleTodosAsync',\r\n    async(payload)=>{\r\n        const resp = await fetch(`http://localhost:7000/todos/${payload.id}`,\r\n        {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n\t\t\tbody: JSON.stringify({completed: payload.completed})\r\n        });\r\n\t\tif (resp.ok) {\r\n            const todo = await resp.json()\r\n            return{id: todo.id, completed: todo.completed}\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n    'todos/deleteTodosAsync',\r\n    async(payload)=>{\r\n        const resp = await fetch(`http://localhost:7000/todos/${payload.id}`,\r\n        {\r\n            method: 'DELETE',\r\n        });\r\n        \r\n        if (resp.ok) {\r\n            return {id: payload.id}\r\n        }\r\n    }\r\n)\r\n\r\nconst TodoSlice = createSlice({\r\n    name: 'todo',\r\n    initialState: [\r\n        {id: 1, title: 'Todo 1', completed: false},\r\n        {id: 2, title: 'Todo 2', completed: false},\r\n        {id: 3, title: 'Todo 3', completed: false},\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                title: action.payload.title,\r\n                completed: false,\r\n            }\r\n            state.push(newTodo)\r\n            },\r\n            toggleComplete: (state, action)=>{\r\n                const index = state.findIndex((todo)=>todo.id===action.payload.id)\r\n                state[index].completed = action.payload.completed\r\n            },\r\n            deleteTodo: (state, action)=>{\r\n                return state.filter((todo)=>todo.id!==action.payload.id)\r\n            }\r\n        \r\n    },\r\n    extraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n            console.log('fetched data successfully...');\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n        [getTodosAsync.pending]: (state, action)=>{\r\n            console.log('fetching data...');\r\n        },\r\n\t\t[addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.push(action.payload.todo);\r\n\t\t},\t\t\r\n        [toggleCompleteAsync.fulfilled]: (state, action) => {\r\n            const index = state.findIndex((todo)=>todo.id===action.payload.id)\r\n            state[index].completed = action.payload.completed\r\n\t\t},\r\n        [deleteTodoAsync.fulfilled]: (state, action) => {\r\n            return state.filter((todo)=>todo.id!==action.payload.id)\r\n\t\t},\t\r\n    }\r\n\r\n})\r\n\r\nexport const {addTodo,toggleComplete,deleteTodo} = TodoSlice.actions\r\nexport default TodoSlice.reducer","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {addTodoAsync} from './redux/TodoSlice'\r\n\r\nconst AddTodoForm = () => {\r\n\tconst [value, setValue] = useState('');\r\nconst dispatch = useDispatch() \r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(\r\n\t\t\taddTodoAsync({\r\n\t\t\ttitle: value,\r\n\t\t}))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\r\n\t\t\t<label className='sr-only'>Name</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\r\n\t\t\t\tplaceholder='Add todo...'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\r\n\t\t\t></input>\r\n\r\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {toggleCompleteAsync, deleteTodoAsync} from './redux/TodoSlice'\r\n\r\nconst TodoItem = ({ id, title, completed }) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst onClick = ()=>{\r\n\t\tdispatch(toggleCompleteAsync({\r\n\t\t\tid: id,\r\n\t\t\tcompleted: !completed\r\n\t\t}))\r\n\t}\r\n\tconst onDelete = ()=>{\r\n\t\tdispatch(deleteTodoAsync({\r\n\t\t\tid: id,\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className={`list-group-item ${completed && 'list-group-item-success'}`}>\r\n\t\t\t<div className='d-flex justify-content-between'>\r\n\t\t\t\t<span className='d-flex align-items-center'>\r\n\t\t\t\t\t<input type='checkbox' className='mr-3' checked={completed} onClick={onClick}></input>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button className='btn btn-danger' onClick={onDelete}>Delete</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, {useEffect} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {getTodosAsync} from './redux/TodoSlice'\r\n\r\nconst TodoList = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst todos = useSelector((state)=>state.todos)\r\n\r\n\tuseEffect(() => {\r\n\t  dispatch(getTodosAsync())\r\n\t\r\n\t}, [dispatch])\r\n\t\r\n\treturn (\r\n\t\t<ul className='list-group'>\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TotalCompleteItems = () => {\r\n\tconst todos = useSelector((state) =>\r\n\t\tstate.todos.filter((todo) => todo.completed === true)\r\n\t);\r\n\treturn <h4 className='mt-3'>Total Complete Items: {todos.length}</h4>;\r\n};\r\n\r\nexport default TotalCompleteItems;\r\n\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddTodoForm from './components/AddTodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport TotalCompleteItems from './components/TotalCompleteItems';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className='container bg-white p-4 mt-5'>\r\n\t\t\t<h1>My Todo List</h1>\r\n\t\t\t<AddTodoForm />\r\n\t\t\t<TodoList />\r\n\t\t\t<TotalCompleteItems />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport todoReducer from './TodoSlice'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        todos: todoReducer,\r\n\r\n    },\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\nimport store from './components/redux/Store'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\t\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}